{"version":3,"sources":["components/homepage/music_genres/MusicGenres.js","components/concert_card/ConcertCard.js","components/homepage/concerts/Concerts.js","components/homepage/HomePage.js","components/default404/Default404.js","components/banner/Banner.js","components/concert_form/NewConcert.js","actions/loggedInActions.js","components/authentication_manager/AuthenticationManager.js","components/login/Login.js","components/navbar/NavbarVisual.js","components/navbar/Navbar.js","components/my_profile/concerts_bought/ConcertsBought.js","components/my_profile/my_concerts/MyConcerts.js","components/my_profile/MyProfile.js","components/register/Register.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["MusicGenres","props","className","id","href","onClick","setCurrentGenre","src","alt","ConcertCard","state","artistName","concertName","description","performanceDate","price","slots","slotsRemaining","imgBase64","buyConcert","axios","request","url","method","withCredentials","data","then","response","alert","catch","error","this","setState","concertData","substring","buyButtonEnabled","Component","Concerts","genre","concerts","getConcertsOfGenre","headers","console","log","removeConcert","index","concertsUpdated","splice","currentGenre","nextProps","length","map","i","displayedInProfile","key","HomePage","genres","Default404","width","height","frameborder","allow","allowfullscreen","title","Banner","NewConcert","name","musicGenre","image","handleChange","event","target","value","handleImageChange","getBase64","file","Promise","resolve","baseURL","reader","FileReader","readAsDataURL","onload","result","handleSubmit","a","preventDefault","imageBase64","onSubmit","placeholder","type","onChange","required","class","selected","rows","aria-hidden","min","max","for","withIcon","buttonText","imgExtension","maxFileSize","singleImage","setLoggedInAction","status","isLoggedIn","LogIn","dispatch","username","password","localStorage","setItem","Date","CreateAccount","email","Login","setLoggedIn","connect","undefined","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","ButtonAppBar","classes","AppBar","position","Toolbar","Typography","variant","process","Fragment","Button","Navbar","ConcertsBought","concert","MyConcerts","MyProfile","currentCategory","updateCurrentCategory","category","Register","App","exact","path","component","Boolean","window","location","hostname","match","initState","rootReducer","action","store","createStore","getItem","dateTime","currentDateTime","expirationDate","setMonth","getMonth","HasExpired","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.90c587ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./../../../sass/homepage/music_genres/MusicGenres.scss\";\r\n\r\nconst MusicGenres = props => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <section id=\"section1\">\r\n        <a href=\"#section2\">‹</a>\r\n        <div onClick={() => props.setCurrentGenre(\"acoustic\")} className=\"item\">\r\n          <img src=\"./images/acoustic.png\" alt=\"Acoustic music\" />\r\n        </div>\r\n        <div onClick={() => props.setCurrentGenre(\"chill\")} className=\"item\">\r\n          <img src=\"./images/chill.png\" alt=\"Chill music\" />\r\n        </div>\r\n        <div onClick={() => props.setCurrentGenre(\"classic\")} className=\"item\">\r\n          <img src=\"./images/classic.png\" alt=\"Classic music\" />\r\n        </div>\r\n        <div onClick={() => props.setCurrentGenre(\"electronic\")} className=\"item\">\r\n          <img src=\"./images/electronic.png\" alt=\"Electronic music\" />\r\n        </div>\r\n        <div onClick={() => props.setCurrentGenre(\"hiphop\")} className=\"item\">\r\n          <img src=\"./images/hiphop.png\" alt=\"Hiphop music\" />\r\n        </div>\r\n        <a href=\"#section2\">›</a>\r\n      </section>\r\n      <section id=\"section2\">\r\n        <a href=\"#section1\">‹</a>\r\n        <div onClick={() => props.setCurrentGenre(\"jazz\")} className=\"item\">\r\n          <img src=\"./images/jazz.png\" alt=\"Jazz music\" />\r\n        </div>\r\n        <div onClick={() => props.setCurrentGenre(\"pop\")} className=\"item\">\r\n          <img src=\"./images/pop.png\" alt=\"Pop music\" />\r\n        </div>\r\n        <div onClick={() => props.setCurrentGenre(\"reggae\")} className=\"item\">\r\n          <img src=\"./images/reggae.png\" alt=\"Reggae music\" />\r\n        </div>\r\n        <div onClick={() => props.setCurrentGenre(\"rock\")} className=\"item\">\r\n          <img src=\"./images/rock.png\" alt=\"Rock music\" />\r\n        </div>\r\n        <div onClick={() => props.setCurrentGenre(\"soul\")} className=\"item\">\r\n          <img src=\"./images/soul.png\" alt=\"Soul music\" />\r\n        </div>\r\n        <a href=\"#section1\">›</a>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MusicGenres;\r\n","import React, { Component } from \"react\";\r\nimport \"./../../sass/concert_card/ConcertCard.scss\";\r\nimport axios from \"axios\";\r\n\r\nclass ConcertCard extends Component {\r\n  state = {\r\n    artistName: \"\",\r\n    concertName: \"\",\r\n    description: \"\",\r\n    performanceDate: null,\r\n    price: 0,\r\n    slots: null,\r\n    slotsRemaining: null,\r\n    imgBase64: null,\r\n    id: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      ...this.props.concertData,\r\n    });\r\n  }\r\n\r\n  buyConcert = () => {\r\n    axios\r\n      .request({\r\n        url: \"http://localhost:8080/concerts/buy\",\r\n        method: \"POST\",\r\n        withCredentials: true,\r\n\r\n        data: {\r\n          data: this.state.id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        alert(\"Bought concert successfully!\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"oops.... something has occurred!\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"concert-card\">\r\n        <div className=\"concert-card-date\">\r\n          {\" \"}\r\n          {this.state.performanceDate != null\r\n            ? this.state.performanceDate.substring(0, 19)\r\n            : null}\r\n        </div>\r\n        <div className=\"concert-card-concertname\">{this.state.concertName}</div>\r\n        <div className=\"concert-card-artistname\">{this.state.artistName}</div>\r\n        <div className=\"concert-card-image-wrapper\">\r\n          <img className=\"concert-card-image\" src={this.state.imgBase64} />\r\n        </div>\r\n\r\n        <div className=\"concert-card-description\">{this.state.description}</div>\r\n        <div className=\"concert-card-slots\">\r\n          There are currently {this.state.slotsRemaining} / {this.state.slots}{\" \"}\r\n          slots remaining!\r\n        </div>\r\n        {this.props.buyButtonEnabled === false ? null : (\r\n          <button onClick={this.buyConcert} className=\"concert-card-buy-button\">\r\n            Buy now! {this.state.price}€\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConcertCard;\r\n","import React, { Component } from \"react\";\r\nimport ConcertCard from \"../../concert_card/ConcertCard\";\r\nimport axios from \"axios\";\r\nimport \"./../../../sass/homepage/concerts/Concerts.scss\";\r\n\r\nclass Concerts extends Component {\r\n  state = {\r\n    genre: null,\r\n    concerts: [],\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      genre: this.props.currentGenre\r\n    },\r\n      this.getConcertsOfGenre\r\n    )\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if (nextProps.currentGenre === null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      genre: nextProps.currentGenre\r\n    }, \r\n      this.getConcertsOfGenre\r\n    )\r\n  };\r\n\r\n  getConcertsOfGenre = () => {\r\n    axios\r\n      .request({\r\n        url: \"http://localhost:8080/concerts/get-concerts-of-genre\",\r\n        method: \"POST\",\r\n\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n\r\n        data: {\r\n          data: this.state.genre\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"Fetched concerts of genre successfully!\");\r\n\r\n        this.setState({\r\n          concerts: response.data,\r\n        });\r\n      })\r\n      .catch((response) => {\r\n        console.log(\"Something went wrong!\");\r\n        console.log(response);\r\n      });\r\n  };\r\n\r\n  removeConcert = (index) => {\r\n    let concertsUpdated = this.state.concerts;\r\n\r\n    concertsUpdated.splice(index, 1);\r\n\r\n    this.setState({\r\n      concerts: concertsUpdated,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"concerts\">\r\n        {this.state.concerts.length !== 0 ? (\r\n          this.state.concerts.map((concertData, i) => (\r\n            <ConcertCard\r\n              concertData={concertData}\r\n              displayedInProfile={false}\r\n              removeConcert={this.removeConcert}\r\n              index={i}\r\n              key={i}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div id=\"no-concerts-warning\">\r\n            Sorry, no concerts for this given genre!\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Concerts;\r\n","import React, { Component } from \"react\";\r\nimport MusicGenres from \"./music_genres/MusicGenres\";\r\nimport \"./../../sass/homepage//Homepage.scss\";\r\nimport Concerts from \"./concerts/Concerts\";\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    genres: [\"acoustic\", \"chill\", \"classic\", \"rock\", \"reggae\", \"soul\", \"jazz\", \"electronic\", \"pop\", \"hiphop\"],\r\n    currentGenre: \"classic\"\r\n  };\r\n\r\n  setCurrentGenre = genre => {\r\n    this.setState({\r\n      currentGenre: genre\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"homepage\">\r\n        <MusicGenres\r\n          className=\"music-genres\"\r\n          setCurrentGenre={this.setCurrentGenre}\r\n        />\r\n        <Concerts currentGenre={this.state.currentGenre} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport \"./../../sass/pageNotFound.scss\";\r\n\r\nclass Default404 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"container\">\r\n          <div className=\"content\">\r\n            <h2>404</h2>\r\n            <h4>Oops! Page not found</h4>\r\n            <h3>But here’s a treat!</h3>\r\n            <div className=\"col-md-12 movie\">\r\n              <iframe\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src=\"https://www.youtube.com/embed/t99KH0TR-J4\"\r\n                frameborder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowfullscreen\r\n                title=\"The show must go on - Queen\"\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Default404;\r\n","import React, { Component } from \"react\";\r\nimport \"../../sass/banner/banner.scss\";\r\n\r\nclass Banner extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 banner\">\r\n          <img id=\"banner-img\" src=\"./images/bannerHome.png\" alt=\"NOSalone\"></img>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Banner;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport \"../../sass/concert_form/NewConcert.scss\";\r\n\r\nclass NewConcert extends Component {\r\n  state = {\r\n    name: \"\",\r\n    musicGenre: \"\",\r\n    performanceDate: \"\",\r\n    image: null,\r\n    price: 50,\r\n    description: \"\",\r\n    slots: 0\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleImageChange = (image) => {\r\n    this.setState({\r\n      image: image[0],\r\n    });\r\n  };\r\n\r\n  getBase64 = (file) => {\r\n    return new Promise((resolve) => {\r\n      let baseURL = \"\";\r\n      // Make new FileReader\r\n      let reader = new FileReader();\r\n\r\n      // Convert the file to base64 text\r\n      reader.readAsDataURL(file);\r\n\r\n      // on reader load somthing...\r\n      reader.onload = () => {\r\n        // Make a fileInfo Object\r\n        console.log(\"Called\", reader);\r\n        baseURL = reader.result;\r\n        resolve(baseURL);\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    alert(\"Concert submited!\");\r\n    event.preventDefault();\r\n\r\n    let imageBase64 = null;\r\n    await this.getBase64(this.state.image).then((result) => {\r\n      imageBase64 = result;\r\n    });\r\n\r\n    axios.request({\r\n      url: \"http://localhost:8080/concerts/create\",\r\n      method: \"POST\",\r\n      withCredentials: true,\r\n\r\n      headers:{\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      data:{\r\n        \"performanceDate\": this.state.performanceDate,\r\n        \"slots\": this.state.slots,\r\n        \"name\": this.state.name,\r\n        \"musicGenre\": this.state.musicGenre,\r\n        \"price\": this.state.price,\r\n        \"imgBase64\": imageBase64,\r\n        \"description\": this.state.description\r\n      }\r\n\r\n    }).then((response) => {\r\n        console.log(\"Form sent successfully!\");\r\n        console.log(response);\r\n      })\r\n      .catch((response) => {\r\n        console.log(\"oops, something went wrong!\");\r\n        console.log(response);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div id=\"new-concert\">\r\n          <div className=\"row justify-content-center myfirst\">\r\n            <div>\r\n              <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                  <div className=\"form-group\">\r\n                    <input className=\"ConcertName\"\r\n                      placeholder=\"  Concert Name\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <select \r\n                      id=\"inputState\" \r\n                      class=\"form-control\" \r\n                      name=\"musicGenre\" \r\n                      value={this.state.musicGenre} \r\n                      onChange={this.handleChange}\r\n                      required\r\n                    >\r\n                      <option selected value=\"\"> Choose Music Genre</option>\r\n                      <option value=\"acoustic\">Acoustic</option>\r\n                      <option value=\"chill\">Chill</option>\r\n                      <option value=\"classic\">Classic</option>\r\n                      <option value=\"electronic\">Eletronic</option>\r\n                      <option value=\"hiphop\">HipHop</option>\r\n                      <option value=\"jazz\">Jazz</option>\r\n                      <option value=\"pop\">Pop</option>\r\n                      <option value=\"reggae\">Reggae</option>\r\n                      <option value=\"rock\">Rock</option>\r\n                      <option value=\"soul\">Soul</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea \r\n                      placeholder=\"Concert Description\" \r\n                      className=\"form-control\" \r\n                      id=\"exampleFormControlTextarea1\" \r\n                      rows=\"3\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.handleChange}\r\n                      required\r\n                    >\r\n                    </textarea>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex justify-content-center my-4 pt-3\">\r\n                    <span className=\"font-weight-bold indigo-text mr-2 mt-1\"><i className=\"fas fa-dollar-sign\" aria-hidden=\"true\"></i>0€</span>\r\n                    <div id=\"price\"> \r\n                      {this.state.price}€\r\n                    </div>\r\n                    <form className=\"range-field w-75\" >\r\n                      <input className=\"border-0\" id=\"price-slider\" \r\n                      name=\"price\"\r\n                      type=\"range\" \r\n                      min=\"0\" max=\"100\" \r\n                      value={this.state.price} \r\n                      onChange={this.handleChange} />\r\n                    </form>\r\n                    <span class=\"font-weight-bold indigo-text ml-2 mt-1\"><i className=\"fas fa-euro-sign\" aria-hidden=\"true\"> 100€</i></span>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <input className=\"slots\"\r\n                      type=\"number\"\r\n                      name=\"slots\"\r\n                      value={this.state.slots}\r\n                      onChange={this.handleChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <div className=\"date\">\r\n                      <label for=\"exampleFormControlSelect1\"></label>\r\n                      <input\r\n                        className=\"Date\"\r\n                        type=\"datetime-local\"\r\n                        name=\"performanceDate\"\r\n                        value={this.state.performanceDate}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <br />\r\n                  <label id=\"upload\">\r\n                    <ImageUploader\r\n                      withIcon={true}\r\n                      buttonText=\"Upload Image\"\r\n                      onChange={this.handleImageChange}\r\n                      imgExtension={[\".jpg\", \".gif\", \".png\"]}\r\n                      maxFileSize={5242880}\r\n                      singleImage={true}\r\n                    />\r\n                  </label>\r\n                  <br />\r\n                  <input type=\"submit\" class=\"btn btn-outline-secondary\"></input>\r\n\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewConcert;\r\n","export const setLoggedInAction = (status) => {\r\n    return{\r\n        type: \"SET_LOGGED_IN\",\r\n        isLoggedIn: status\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nexport function LogIn(dispatch, username, password) {\r\n\r\n  axios\r\n    .request({\r\n      url: \"http://localhost:8080/users/login\",\r\n      method: \"POST\",\r\n      withCredentials: true,\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      data: {\r\n        name: username,\r\n        password: password\r\n      },\r\n    })\r\n    .then((response) => {\r\n      console.log(response);\r\n\r\n      if (response.data) {\r\n        alert(\"Successfully logged in!\");\r\n        localStorage.setItem(\"isLoggedIn\", true);\r\n        localStorage.setItem(\"loggedInDateTime\", new Date());\r\n        dispatch(true);\r\n      } else {\r\n        alert(\"Please enter the correct username and password!\");\r\n      }\r\n    })\r\n    .catch((response) => {\r\n      alert(\"Oops, something went wrong!\");\r\n    });\r\n}\r\n\r\nexport function LogOut(dispatch) {\r\n  console.log(\"Setting localstorage and redux status to logged out!\");\r\n\r\n  axios\r\n    .request({\r\n      url: \"http://localhost:8080/users/logout\",\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n    }).then((response) => {\r\n      alert(\"Successfully logged out!\");\r\n      localStorage.setItem(\"isLoggedIn\", false);\r\n      localStorage.setItem(\"loggedInDateTime\", null);\r\n      dispatch(false);\r\n    }).catch((response) => {\r\n      alert(\"Oops, something went wrong!\");\r\n    });\r\n}\r\n\r\nexport function CheckLoggedIn() {\r\n  console.log(\"Checking if we are logged in!\");\r\n  console.log(\"TEST:\" + localStorage.getItem(\"isLoggedIn\"));\r\n  if (localStorage.getItem(\"isLoggedIn\") === \"true\") {\r\n    if (HasExpired(localStorage.getItem(\"loggedInDateTime\"))) {\r\n      console.log(\"We were logged in but it expired!\");\r\n      localStorage.setItem(\"isLoggedIn\", false);\r\n      localStorage.setItem(\"loggedInDateTime\", null);\r\n      return { isLoggedIn: false };\r\n    } else {\r\n      console.log(\"We are already logged in!\");\r\n      localStorage.setItem(\"isLoggedIn\", true);\r\n      localStorage.setItem(\"loggedInDateTime\", new Date());\r\n      return { isLoggedIn: true };\r\n    }\r\n  } else {\r\n    console.log(\"isLoggedIn is either false or hasnt been added yet!\");\r\n    // isLoggedIn is either false or hasn't yet been added to localstorage\r\n    localStorage.setItem(\"isLoggedIn\", false);\r\n    localStorage.setItem(\"loggedInDateTime\", null);\r\n    return { isLoggedIn: false };\r\n  }\r\n}\r\n\r\nexport function CreateAccount(username, email, password) {\r\n  axios\r\n    .request({\r\n      url: \"http://localhost:8080/users/register\",\r\n      method: \"POST\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      data: {\r\n        name: username,\r\n        email: email,\r\n        password: password,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      alert(\"You have successfully registered!\");\r\n    })\r\n    .catch((response) => {\r\n      alert(\"Oops, something went wrong with your registration!\");\r\n    });\r\n}\r\n\r\nfunction HasExpired(dateTime) {\r\n  var currentDateTime = new Date();\r\n\r\n  var expirationDate = currentDateTime;\r\n  expirationDate.setMonth(currentDateTime.getMonth + 3);\r\n\r\n  return dateTime > expirationDate;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLoggedInAction } from \"./../../actions/loggedInActions\";\r\nimport { LogIn } from \"../authentication_manager/AuthenticationManager\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    LogIn(this.props.setLoggedIn, this.state.username, this.state.password);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div id=\"new-concert\">\r\n          <div className=\"row justify-content-center myfirst\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  placeholder=\"  Username\"\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value={this.state.username}\r\n                  onChange={this.handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  placeholder=\"  Password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-secondary\"\r\n              ></input>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setLoggedIn: (status) => dispatch(setLoggedInAction(status)),\r\n  };\r\n};\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Login);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../../sass/navbar/Navbar.scss\";\r\nimport { LogOut } from \"./../authentication_manager/AuthenticationManager\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} id=\"navbar\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <a className=\"navbar-text\" href={process.env.PUBLIC_URL + \"/\"}>\r\n              NOS alone'20\r\n            </a>\r\n          </Typography>\r\n          {props.isLoggedIn ? (\r\n            <React.Fragment>\r\n              <Button href={process.env.PUBLIC_URL + \"/form\"}>\r\n                <div className=\"navbar-text\">Add a concert</div>\r\n              </Button>\r\n              <Button href={process.env.PUBLIC_URL + \"/myprofile\"}>\r\n                <div className=\"navbar-text\">MyProfile</div>\r\n              </Button>\r\n              <Button onClick={() => LogOut(props.setLoggedIn)}>\r\n                <div className=\"navbar-text\">Logout</div>\r\n              </Button>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Button href={process.env.PUBLIC_URL + \"/login\"}>\r\n                <div className=\"navbar-text\">Login</div>\r\n              </Button>\r\n              <Button href={process.env.PUBLIC_URL + \"/register\"}>\r\n                <div className=\"navbar-text\">Register</div>\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../../sass/navbar/Navbar.scss\";\r\nimport {connect} from \"react-redux\";\r\nimport NavbarVisual from \"./NavbarVisual\";\r\nimport {setLoggedInAction} from \"./../../actions/loggedInActions\";\r\n\r\nclass Navbar extends Component{\r\n  \r\n  render(){\r\n\r\n    return(\r\n      <NavbarVisual isLoggedIn={this.props.isLoggedIn} setLoggedIn={this.props.setLoggedIn} />\r\n    );\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    setLoggedIn: (status) => dispatch(setLoggedInAction(status))\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    isLoggedIn: state.isLoggedIn\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport ConcertCard from \"./../../concert_card/ConcertCard\";\r\n\r\nclass ConcertsBought extends Component {\r\n  state = { concerts: [] };\r\n\r\n  componentDidMount() {\r\n    axios.request({\r\n        url: \"http://localhost:8080/concerts/get-bought-concerts-of-user\",\r\n        method: \"GET\",\r\n        withCredentials: true\r\n    }).then(response => {\r\n        this.setState({\r\n            concerts: response.data\r\n        })\r\n    }).catch(response => {\r\n        console.log(\"oops, something went wrong!\")\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"myprofile-concertsbought\">\r\n        Concerts bought\r\n        <br/>\r\n        {this.state.concerts.length === 0 ? (\r\n          <div id=\"myprofile-concertsbought-noconcerts\">\r\n            It looks like you have no concerts bought!\r\n          </div>\r\n        ) : (\r\n          this.state.concerts.map((concert, i) => (\r\n            <ConcertCard concertData={concert} buyButtonEnabled={false} key={i} />\r\n          ))\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConcertsBought;\r\n","import React, { Component } from \"react\";\r\nimport ConcertCard from \"./../../concert_card/ConcertCard\";\r\nimport axios from \"axios\";\r\n\r\nclass MyConcerts extends Component {\r\n  state = {\r\n    concerts: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.request({\r\n        url: \"http://localhost:8080/concerts/get-owned-concerts-of-user\",\r\n        method: \"GET\",\r\n        withCredentials: true\r\n    }).then(response => {\r\n        this.setState({\r\n            concerts: response.data\r\n        })\r\n    }).catch(response => {\r\n        console.log(\"oops, something went wrong!\")\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"myprofile-myconcerts\">\r\n        My Concerts\r\n        <br/>\r\n        {this.state.concerts.length === 0\r\n          ? <div id=\"myprofile-myconcerts-noconcerts\">It looks like you have no concert of your own!</div>\r\n          : \r\n          this.state.concerts.map((concert, i) => (\r\n            <ConcertCard concertData={concert} buyButtonEnabled={false} key={i}/>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyConcerts;\r\n","import React, {Component} from \"react\";\r\nimport ConcertsBought from \"./concerts_bought/ConcertsBought\";\r\nimport MyConcerts from \"./my_concerts/MyConcerts\";\r\nimport \"../../sass/my_profile/MyProfile.scss\";\r\n\r\nclass MyProfile extends Component {\r\n    state = { \r\n        currentCategory: \"Concerts Bought\"\r\n     }\r\n\r\n     updateCurrentCategory = (category) => {\r\n         this.setState({\r\n             currentCategory: category\r\n         })\r\n     }\r\n\r\n    render() { \r\n        return ( \r\n            <div id=\"myprofile\">\r\n\r\n                <MyConcerts />\r\n                <ConcertsBought/>\r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyProfile;","import React, { Component } from \"react\";\r\nimport {CreateAccount} from \"./../authentication_manager/AuthenticationManager\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n      event.preventDefault();\r\n    CreateAccount( this.state.username, this.state.email, this.state.password);\r\n        \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div id=\"new-concert\">\r\n          <div className=\"row justify-content-center myfirst\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  placeholder=\"  Username\"\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value={this.state.username}\r\n                  onChange={this.handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  placeholder=\"  Email\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  placeholder=\"  Password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-secondary\"\r\n              ></input>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport HomePage from \"./components/homepage/HomePage\";\r\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\r\nimport Default404 from \"./components/default404/Default404\";\r\nimport Banner from \"./components/banner/Banner\";\r\nimport \"./sass/root/Root.scss\";\r\nimport NewConcert from \"./components/concert_form/NewConcert\";\r\nimport Login from \"./components/login/Login\";\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport MyProfile from \"./components/my_profile/MyProfile\";\r\nimport Register from \"./components/register/Register\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n\r\n      <Navbar />\r\n      <Banner />\r\n\r\n      <Switch>\r\n\r\n        <Route exact path={process.env.PUBLIC_URL + \"/\"} component={HomePage} />\r\n\r\n        <Route exact path={process.env.PUBLIC_URL + \"/form\"} component={NewConcert} />\r\n        <Route exact path={process.env.PUBLIC_URL + \"/login\"} component={Login} />\r\n        <Route exact path={process.env.PUBLIC_URL + \"/register\"} component={Register} />\r\n        <Route exact path={process.env.PUBLIC_URL + \"/myprofile\"} component={MyProfile} />\r\n\r\n        <Route component={Default404} />\r\n\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initState = {\r\n    isLoggedIn: false\r\n}\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    if(action.type === \"SET_LOGGED_IN\"){\r\n        return {\r\n            ...state,\r\n            isLoggedIn: action.isLoggedIn\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport { CheckLoggedIn } from './components/authentication_manager/AuthenticationManager';\r\n\r\nconst store = createStore(rootReducer, CheckLoggedIn());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}